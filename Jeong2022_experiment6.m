%% experiment VI: classical conditioning - "trial-less"
% description goes here

%% initialization
Jeong2022_preface;

%% used fixed random seed
rng(0);

%% key assumptions
use_clicks = 0;
use_cs_offset = 1;

%% analysis parameters
isi_cutoff = .5;
cs_period = [0,.5];
reward_period = [0,.5];
baseline_period = [-.5,0];

%% experiment parameters
cs_dur = .25;
trace_dur = 3;
icsi_mu = 33;
icsi_min = .25;
icsi_max = 99;

%% simulation parameters
n_rewards = 500;

%% inter-CS-intervals
icsi_pd = truncate(makedist('exponential','mu',icsi_mu),icsi_min,icsi_max);
icsi = random(icsi_pd,n_rewards,1);
icsi = dt * round(icsi / dt);
n_bins = round(max(icsi) / icsi_mu) * 10;
icsi_edges = linspace(icsi_min,icsi_max,n_bins);
icsi_counts = histcounts(icsi,icsi_edges);
icsi_counts = icsi_counts ./ nansum(icsi_counts);
icsi_pdf = pdf(icsi_pd,icsi_edges);
icsi_pdf = icsi_pdf ./ nansum(icsi_pdf);

%% simulation time
dur = sum(icsi) + icsi_max;
time = 0 : dt : dur - dt;
n_states = numel(time);
state_edges = linspace(0,dur,n_states+1);

%% CS onset times
cs_onset_times = cumsum(icsi);
cs_onset_times = dt * round(cs_onset_times / dt);
cs_onset_counts = histcounts(cs_onset_times,state_edges);

%% CS offset times
cs_offset_times = cs_onset_times + cs_dur;
cs_offset_times = dt * round(cs_offset_times / dt);
cs_offset_counts = histcounts(cs_offset_times,state_edges);

%% click times
click_times = cs_offset_times + trace_dur;
click_times = dt * round(click_times / dt);
click_counts = histcounts(click_times,state_edges);
n_clicks = sum(click_counts);

%% CS flags
cs_ison = sum(...
    time >= cs_onset_times & ...
    time <= cs_offset_times,1)';

%% reaction times
reaction_times = repmat(.5,n_rewards,1);
% reaction_times = linspace(1,.1,n_rewards)';
reaction_times = max(reaction_times,dt*2);
if ~use_clicks
    reaction_times = 0;
end

%% reward times
reward_times = click_times + reaction_times;
reward_times = dt * round(reward_times / dt);
reward_counts = histcounts(reward_times,state_edges);

%% flag previous & intermediate CS/reward pairs
cs_intermediate_flags = icsi < (reward_times - cs_onset_times);
cs = categorical(cs_intermediate_flags,[0,1],{'CS_{prev.}','CS_{interm.}'});
cs_set = categories(cs);

%% microstimuli
stimulus_trace = stimulustracefun(y0,tau,time)';
mus = linspace(1,0,n);
microstimuli = microstimulusfun(stimulus_trace,mus,sigma);

%% UNCOMMENT TO REPLACE MICROSTIMULI WITH COMPLETE SERIAL COMPOUND
% csc = zeros(n_states,n);
% pulse_duration = .5;
% pulse_length = floor(pulse_duration / dt);
% for ii = 1 : n
%     idcs = (1 : pulse_length) + (ii - 1) * pulse_length;
%     csc(idcs,ii) = 1;
% end
% microstimuli = csc;
% microstimuli = microstimuli / max(sum(microstimuli,2));

%% concatenate all stimulus times
stimulus_times = {...
    reward_times,...
    cs_onset_times};
if use_clicks
    stimulus_times = [...
        stimulus_times,...
        click_times];
end
if use_cs_offset
    stimulus_times = [...
        stimulus_times,...
        cs_offset_times];
end

%% concatenate all state flags
cs_flags = [...
    cs_ison];

%% TD learning
[state,value,rpe,exp2_weights] = tdlambda(...
    time,[],stimulus_times,reward_times,microstimuli,[],...
    'alpha',alpha,...
    'gamma',gamma,...
    'lambda',lambda);

%% compute 'DA signal'
padded_rpe = padarray(rpe,dlight_kernel.nbins/2,0);
da = conv(padded_rpe(1:end-1),dlight_kernel.pdf,'valid');

%% get reward-aligned snippets of DA signal
[da_cs_snippets,da_cs_time] = ...
    signal2eventsnippets(time,da,cs_onset_times,cs_period,dt);
[da_us_snippets,da_reward_time] = ...
    signal2eventsnippets(time,da,reward_times,reward_period,dt);
[da_baseline_snippets,da_baseline_time] = ...
    signal2eventsnippets(time,da,reward_times,baseline_period,dt);

%% compute 'DA response' metric

% preallocation
da_cs_response = nan(n_rewards,1);
da_us_response = nan(n_rewards,1);

% iterate through rewards
for ii = 1 : n_rewards
    da_cs_response(ii) = ...
        sum(da_cs_snippets(ii,:)) - sum(da_baseline_snippets(ii,:));
    da_us_response(ii) = ...
        sum(da_us_snippets(ii,:)) - sum(da_baseline_snippets(ii,:));
end

%% figure 6: experiment VI

% figure initialization
figure(figopt,...
    'name','experiment VI: test 8');

% axes initialization
n_rows = 4;
n_cols = 6;
sp_stimulus = subplot(n_rows,n_cols,(1:n_cols/2)+n_cols*0);
sp_state = subplot(n_rows,n_cols,(1:n_cols/2)+n_cols*1);
sp_rpe = subplot(n_rows,n_cols,(1:n_cols/2)+n_cols*2);
sp_value = subplot(n_rows,n_cols,(1:n_cols/2)+n_cols*3);
sp_icsi = subplot(n_rows,n_cols,n_cols*0+n_cols/2+1);
sp_reaction = subplot(n_rows,n_cols,n_cols*0+n_cols/2+2);
sp_cstype = subplot(n_rows,n_cols,n_cols*0+n_cols/2+3);
sp_dunnoyet1 = subplot(n_rows,n_cols,n_cols*1+n_cols/2+1);
sp_dunnoyet2 = subplot(n_rows,n_cols,n_cols*1+n_cols/2+2);
sp_dunnoyet3 = subplot(n_rows,n_cols,n_cols*1+n_cols/2+3);
sp_bslresponse = subplot(n_rows,n_cols,n_cols*2+n_cols/2+1);
sp_csresponse = subplot(n_rows,n_cols,n_cols*2+n_cols/2+2);
sp_usresponse = subplot(n_rows,n_cols,n_cols*2+n_cols/2+3);
sp_test8_csratio = subplot(n_rows,n_cols,n_cols*3+n_cols/2+1);
sp_test8_usratio = subplot(n_rows,n_cols,n_cols*3+n_cols/2+2);
sp_test8_bslcorrcsratio = subplot(n_rows,n_cols,n_cols*3+n_cols/2+3);

% concatenate axes
sps = [...
    sp_stimulus;...
    sp_state;...
    sp_rpe;...
    sp_value;...
    sp_icsi;...
    sp_reaction;...
    sp_cstype;...
    sp_bslresponse;...
    sp_csresponse;...
    sp_usresponse;...
    sp_test8_csratio;...
    sp_test8_usratio;...
    sp_test8_bslcorrcsratio;...
    ];

% axes settings
set(sps,axesopt);
set(sp_icsi,...
    'xlim',[0,110]);
set(sp_cstype,...
    'xlim',[0,1]+[-1,1],...
    'xtick',[0,1],...
    'xticklabel',cs_set);
set(sp_csresponse,...
    'ycolor','none');

% axes titles
title(sp_bslresponse,'Baseline period');
title(sp_csresponse,'CS period');
title(sp_usresponse,'Reward period');
title(sp_test8_usratio,'Test VIII');

% axes labels
xlabel(sp_stimulus,'Time (s)');
ylabel(sp_stimulus,'Stimulus trace (a.u.)');
xlabel(sp_state,'Time (s)');
ylabel(sp_state,'State feature #');
xlabel(sp_rpe,'Time (s)');
ylabel(sp_rpe,'RPE (a.u.)');
xlabel(sp_value,'Time (s)');
ylabel(sp_value,'Value (a.u.)');
xlabel(sp_icsi,'Inter-CS-interval (s)');
ylabel(sp_icsi,'PDF');
xlabel(sp_reaction,'Time (s)');
ylabel(sp_reaction,'Reaction time (s)');
ylabel(sp_cstype,'Count');
xlabel(sp_bslresponse,'Time since reward (s)');
ylabel(sp_bslresponse,'DA (a.u.)');
xlabel(sp_csresponse,'Time since reward (s)');
ylabel(sp_csresponse,'DA (a.u.)');
xlabel(sp_usresponse,'Reward #');
ylabel(sp_usresponse,'DA response (a.u.)');
xlabel(sp_test8_csratio,'Previous IRI (s)');
ylabel(sp_test8_csratio,'DA response (a.u.)');

% time selection
last_intermediate_idx = find(cs_intermediate_flags,1,'last');
dur2plot = 60;
time_flags = ...
    time >= cs_onset_times(last_intermediate_idx) - dur2plot / 2 & ...
    time < cs_onset_times(last_intermediate_idx) + dur2plot / 2;
idcs = find(time_flags);
time_win = [time(idcs(1)),time(idcs(end))];

% plot stimulus trace
if use_clicks
    stem(sp_stimulus,...
        time(idcs),click_counts(idcs),...
        'color','k',...
        'marker','none');
end
stem(sp_stimulus,...
    cs_onset_times(~cs_intermediate_flags),ones(sum(~cs_intermediate_flags),1),...
    'color',cs_previous_clr,...
    'marker','none',...
    'linewidth',1);
stem(sp_stimulus,...
    cs_onset_times(cs_intermediate_flags),ones(sum(cs_intermediate_flags),1),...
    'color',cs_intermediate_clr,...
    'marker','none',...
    'linewidth',1);
stem(sp_stimulus,...
    reward_times,ones(n_rewards,1),...
    'color',reward_clr,...
    'marker','none',...
    'linewidth',1);

% plot state features
imagesc(sp_state,time(idcs)+dt/2,[],state(idcs,:)');

% plot RPE
stem(sp_rpe,time(idcs),rpe(idcs),...
    'color','k',...
    'marker','none');

% plot DA signal
plot(sp_rpe,time(idcs),da(idcs)*10,...
    'color',highlight_clr);

% plot value trace
stairs(sp_value,time(idcs),value(idcs),...
    'color','k');

% update axis limits
set([sp_stimulus,sp_state,sp_rpe,sp_value],...
    'xlim',time_win);

% legend
if use_clicks
    leg_str = [cs_set;{'click';'reward'}];
else
    leg_str = [cs_set;{'reward'}];
end
legend(sp_stimulus(1),leg_str,...
    'location','best',...
    'box','off');

% plot ICSI distribution
stem(sp_icsi,icsi_mu,max([icsi_counts,icsi_pdf]),...
    'color','k',...
    'marker','v',...
    'markersize',10,...
    'markerfacecolor','k',...
    'markeredgecolor','none',...
    'linewidth',2);
histogram(sp_icsi,...
    'binedges',icsi_edges,...
    'bincounts',icsi_counts,...
    'facecolor','w',...
    'edgecolor','k',...
    'facealpha',1,...
    'linewidth',1);
plot(sp_icsi,icsi_edges,icsi_pdf,...
    'color','k',...
    'linewidth',2);

% plot reaction times
if use_clicks
    plot(sp_reaction,...
        reward_times,reaction_times,...
        'color','k',...
        'marker','.',...
        'markersize',5,...
        'linestyle','none');
end

% plot CS distribution
patch(sp_cstype,...
    0+[-1,1,1,-1]*1/4,[0,0,1,1]*sum(~cs_intermediate_flags),...
    cs_previous_clr,...
    'edgecolor',cs_previous_clr,...
    'linewidth',1.5,...
    'facealpha',2/3);
patch(sp_cstype,...
    1+[-1,1,1,-1]*1/4,[0,0,1,1]*sum(cs_intermediate_flags),...
    cs_intermediate_clr,...
    'edgecolor',cs_intermediate_clr,...
    'linewidth',1.5,...
    'facealpha',2/3);

% plot average CS-aligned baseline signal
da_baseline_mu = nanmean(da_baseline_snippets);
plot(sp_bslresponse,da_baseline_time,da_baseline_mu,...
    'color','k',...
    'linewidth',1.5);

% plot average CS-aligned reward signal
da_cs_mu = nanmean(da_cs_snippets);
plot(sp_csresponse,da_reward_time,da_cs_mu,...
    'color','k',...
    'linewidth',1.5);

% plot average reward-aligned reward signal
da_reward_mu = nanmean(da_us_snippets);
plot(sp_usresponse,da_reward_time,da_reward_mu,...
    'color','k',...
    'linewidth',1.5);

% legend (SHOULD BE ABOUT CS TYPES!!!!!!)
% legend_labels = repmat({''},n_stages,1);
% legend_labels{1} = 'Early';
% legend_labels{end} = 'Late';
% legend(sp_bslresponse,legend_labels,...
%     'location','northwest',...
%     'box','off');

% test 1: DA responses as a function of reward number
% nan_flags = isnan(da_us_response);
% reward_idcs = (1 : n_rewards)';
% xx = reward_idcs;
% [rho,pval] = corr(xx(~nan_flags),da_us_response(~nan_flags));
% mdl = fitlm(xx,da_us_response);
% scatter(sp_usresponse,xx,da_us_response,20,...
%     colorlerp([early_clr; late_clr],n_rewards),...
%     'marker','o',...
%     'markerfacealpha',.5,...
%     'markerfacecolor','flat',...
%     'markeredgecolor','flat',...
%     'linewidth',1);
% plot(sp_usresponse,xx,mdl.predict(xx),...
%     'color',highlight_clr,...
%     'linestyle',repmat('-',1,1+(mdl.Coefficients.pValue(end)>.05)),...
%     'linewidth',1.5);
% plot(sp_usresponse,xlim(sp_usresponse),[1,1]*0,':k');
% text(sp_usresponse,.95,.95,sprintf('r = %.2f',rho),...
%     'horizontalalignment','right',...
%     'units','normalized',...
%     'color','k');
% text(sp_usresponse,.95,.85,sprintf('p = %.2f',pval),...
%     'horizontalalignment','right',...
%     'units','normalized',...
%     'color','k');

% test 2: DA responses as a function of previous IRI
% nan_flags = isnan(da_response);
% [rho,pval] = corr(iri(~nan_flags),da_response(~nan_flags));
% mdl = fitlm(iri,da_response);
% scatter(sp_test2,iri,da_response,20,...
%     colorlerp([early_clr; late_clr],n_rewards),...
%     'marker','o',...
%     'markerfacealpha',.5,...
%     'markerfacecolor','flat',...
%     'markeredgecolor','flat',...
%     'linewidth',1);
% plot(sp_test2,mdl.Variables.x1,mdl.predict(mdl.Variables.x1),...
%     'color',highlight_clr,...
%     'linestyle',repmat('-',1,1+(mdl.Coefficients.pValue(end)>.05)),...
%     'linewidth',1.5);
% plot(sp_test2,xlim(sp_test2),[1,1]*0,':k');
% text(sp_test2,.95,.95,sprintf('r = %.2f',rho),...
%     'horizontalalignment','right',...
%     'units','normalized',...
%     'color','k');
% text(sp_test2,.95,.85,sprintf('p = %.2f',pval),...
%     'horizontalalignment','right',...
%     'units','normalized',...
%     'color','k');

% axes linkage
arrayfun(@(ax1,ax2,ax3,ax4)linkaxes([ax1,ax2,ax3,ax4],'x'),...
    sp_stimulus,sp_state,sp_rpe,sp_value);
linkaxes([sp_cstype,sp_dunnoyet1],'x');
linkaxes(sp_rpe,'y');
linkaxes(sp_value,'y');
linkaxes([sp_bslresponse,sp_csresponse],'y');
linkaxes([sp_bslresponse,sp_csresponse],'y');

% annotate model parameters
annotateModelParameters;
