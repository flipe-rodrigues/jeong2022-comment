function [outputArg1,outputArg2] = plotrasters(inputArg1,inputArg2)
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here

% figure initialization
figure(...
    'windowstyle','docked',...
    'numbertitle','off',...
    'name','lick_collection_rasters_reaction',...
    'color','w');

% axes initialization
sps = gobjects(n_mice,1);
for ii = 1 : n_mice
    sps(ii) = subplot(ceil(n_mice/4),ceil(n_mice/2),ii);
end
set(sps,...
    'xlim',lick_period-lickrate_kernel.paddx,...
    'ylimspec','tight',...
    'xscale','linear',...
    'nextplot','add',...
    'colormap',bone(2^8-1),...
    'linewidth',2,...
    'fontsize',12,...
    'layer','top',...
    'tickdir','out');

% iterate through mice
for mm = 1 : n_mice
    mouse_flags = data.mouse == mouse_ids{mm};
    reward_flags = ...
        mouse_flags & ...
        valid_flags;
    n_rewards = sum(reward_flags);
    n_sessions = max(data.session(mouse_flags));
    session_clrs = cool(n_sessions);
    
    % axes labels
    title(sps(mm),sprintf('%s',mouse_ids{mm}),...
        'interpreter','none');
    xlabel(sps(mm),'Time since reward collection (s)');
    ylabel(sps(mm),'Valid reward # (sorted by reaction time)');
    
    % plot lick raster
    lick_counts = data.lick.collection(reward_flags,:);
    nan_flags = isnan(lick_counts);
    lick_counts(nan_flags) = 0;
    lick_rates = conv2(1,lickrate_kernel.pdf,lick_counts,'same') / dt;
    lick_rates(nan_flags) = nan;
    sorting_mat = [data.rt(reward_flags),data.session(reward_flags)];
    [~,sorted_idcs] = sortrows(sorting_mat,[2,1]);
    imagesc(sps(mm),lick_roi_time,[],...
        lick_rates(sorted_idcs,:),[0,10]);
    
    % plot reaction times
    reaction_times = -data.rt(reward_flags);
    session_idcs = data.session(reward_flags);
    scatter(sps(mm),...
        reaction_times(sorted_idcs),1:n_rewards,5,...
        session_clrs(session_idcs(sorted_idcs),:),...
        'marker','.');
    
    % iterate through sessions
    counter = 0;
    for ss = 1 : n_sessions
        session_flags = data.session == ss;
        reward_flags = ...
            mouse_flags & ...
            session_flags & ...
            valid_flags;
        prev_counter = counter;
        counter = counter + sum(reward_flags);
        
        % plot session delimeters
        plot(sps(mm),xlim(sps(mm)),...
            [1,1]*(counter+.5),...
            'color',[1,1,1]);
        plot(sps(mm),[1,1]*min(xlim(sps(mm)))+.015*range(xlim(sps(mm))),...
            [prev_counter,counter]+.5,...
            'color',session_clrs(ss,:),...
            'linewidth',5);
    end
    
    % plot reference lines
    plot(sps(mm),[0,0],ylim(sps(mm)),'--w');
end
end

